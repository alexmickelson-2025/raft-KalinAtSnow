@rendermode InteractiveServer
@page "/"
@using Raft

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>
@if (!isRunning)
{
    <button class="btn btn-primary" @onclick=StartSimulation>Start Simulation</button>
}
else
{
    //<button class="btn btn-danger" @onclick="StopNodes">Stop Simulation</button>
}

Welcome to your new app.

<div class="row">
@foreach(var node in visualizationNodes)
{
        var timeoutRemaining = node.innerNode.ElectionTimeout;
        //var maxIntervalMilliseconds = 300 * RaftNode.NodeIntervalScalar;
        //var percentageRemaining = (int)(100 * (Math.Abs(timeoutRemaining.TotalMilliseconds) / maxIntervalMilliseconds));

    <div>
        @node._id
        <div>
            @node.State
        </div>
    </div>
}
</div>


@code {
    private Timer? timer;
    bool isRunning;
    List<VisualizationNode>? visualizationNodes = [];

    void StartSimulation()
    {
        var node1 = new Node(1);
        var node2 = new Node(2);
        var node3 = new Node(3);

        var simulation1 = new VisualizationNode(node1);
        var simulation2 = new VisualizationNode(node2);
        var simulation3 = new VisualizationNode(node3);

        node1.nodes = [simulation2, simulation3];
        node2.nodes = [simulation1, simulation3];
        node3.nodes = [simulation1, simulation2];

        visualizationNodes = [simulation1,simulation2,simulation3];

        node1.Start();
        node2.Start();
        node3.Start();

        StateHasChanged();
        timer = new Timer(_ =>
        {
            Console.WriteLine("here");
            InvokeAsync(StateHasChanged);
        }, null, 0, 200);
    }
}